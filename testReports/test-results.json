{
  "stats": {
    "suites": 6,
    "tests": 12,
    "passes": 8,
    "pending": 0,
    "failures": 4,
    "start": "2023-05-26T10:41:11.323Z",
    "end": "2023-05-26T10:43:38.332Z",
    "duration": 147009,
    "testsRegistered": 12,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "1ca1ee3a-5663-4e0c-84a1-b6282fcdd495",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5e50e899-694e-4f88-a820-98560b5c2b59",
          "title": "Classroom",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\Classroom\\index.js",
          "file": "\\test\\Dashboard\\Classroom\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Classroom\"",
              "fullTitle": "Classroom \"after each\" hook in \"Classroom\"",
              "timedOut": false,
              "duration": 3522,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "40cc0ef1-0d23-481a-883e-749578b4ce3a",
              "parentUUID": "5e50e899-694e-4f88-a820-98560b5c2b59",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for class card chrome",
              "fullTitle": "Classroom Check for class card chrome",
              "timedOut": false,
              "duration": 9545,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            \n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementsLocated(By.css(`div.card-class`)), 10000);\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "99ee5f32-2a99-4e53-b80c-441bebc9ad2f",
              "parentUUID": "5e50e899-694e-4f88-a820-98560b5c2b59",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for class card firefox",
              "fullTitle": "Classroom Check for class card firefox",
              "timedOut": false,
              "duration": 10483,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            \n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementsLocated(By.css(`div.card-class`)), 10000);\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {
                "message": "StaleElementReferenceError: The element with the reference 6ef9653f-3446-4fe1-a21c-c58c0b24f16a is stale; either its node document is not the active document, or it is no longer connected to the DOM",
                "estack": "StaleElementReferenceError: The element with the reference 6ef9653f-3446-4fe1-a21c-c58c0b24f16a is stale; either its node document is not the active document, or it is no longer connected to the DOM\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async Context.<anonymous> (file:///D:/allbasic/nodejs/selenium/testingapp/test/Dashboard/Classroom/index.js:46:29)",
                "diff": null
              },
              "uuid": "4f863912-18bf-4595-9cc7-c014cd7ae987",
              "parentUUID": "5e50e899-694e-4f88-a820-98560b5c2b59",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "99ee5f32-2a99-4e53-b80c-441bebc9ad2f"
          ],
          "failures": [
            "4f863912-18bf-4595-9cc7-c014cd7ae987"
          ],
          "pending": [],
          "skipped": [],
          "duration": 20028,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "7b9f6914-c0f9-42d6-905c-ccd949001c90",
          "title": "Dashboard",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\index.js",
          "file": "\\test\\Dashboard\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Dashboard\"",
              "fullTitle": "Dashboard \"after each\" hook in \"Dashboard\"",
              "timedOut": false,
              "duration": 3541,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "0ac99d8f-c5a3-42c6-8258-5e69fac80047",
              "parentUUID": "7b9f6914-c0f9-42d6-905c-ccd949001c90",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for analytic charts chrome",
              "fullTitle": "Dashboard Check for analytic charts chrome",
              "timedOut": false,
              "duration": 8914,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.get(appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "27b932cb-1ba9-4910-b4e6-e39746b9dfb1",
              "parentUUID": "7b9f6914-c0f9-42d6-905c-ccd949001c90",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for analytic charts firefox",
              "fullTitle": "Dashboard Check for analytic charts firefox",
              "timedOut": false,
              "duration": 10201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.get(appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "6faf49cb-cc33-4f76-b2ca-fb3a0b4576ac",
              "parentUUID": "7b9f6914-c0f9-42d6-905c-ccd949001c90",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "27b932cb-1ba9-4910-b4e6-e39746b9dfb1",
            "6faf49cb-cc33-4f76-b2ca-fb3a0b4576ac"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19115,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "6d9fca5c-0075-4e8e-8036-3e899277c2c0",
          "title": "User",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\User\\create.js",
          "file": "\\test\\Dashboard\\User\\create.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"User\"",
              "fullTitle": "User \"after each\" hook in \"User\"",
              "timedOut": false,
              "duration": 3541,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "75db2389-ffbf-40c6-a43c-99e212cdb15e",
              "parentUUID": "6d9fca5c-0075-4e8e-8036-3e899277c2c0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create user in dashboard from browser chrome",
              "fullTitle": "User Create user in dashboard from browser chrome",
              "timedOut": false,
              "duration": 9334,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            // Selections & Actions\n            \n            await driver.findElement(By.css('a > i.ri-icon.ri-user-3-line')).click();\n            await driver.findElement(By.css('button.btn.btn-primary')).click();\n            \n            await driver.wait(until.elementsLocated(By.css(`div.card-wrapper`)));\n            let cardForm = await driver.findElement(By.css('.card-wrapper')).isDisplayed();\n            let cardFormTitle = await driver.findElement(By.css(\".card-wrapper .card .card-header h3\")).getText();\n\n            // Fill the Form\n            await driver.wait(until.elementsLocated(By.css(`div.program-card`)));\n            let selectUserRole = await driver.findElement(By.css(\".program-card\"));\n            await selectUserRole.click();\n            \n            // Get the results\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            // Result Output\n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(cardForm).to.eq(true);\n            expect(cardFormTitle).to.eq(\"Create Users\");\n\n            expect(await selectUserRole.getAttribute('class')).contain('bg-primary');",
              "err": {},
              "uuid": "c8dece29-acdf-4009-a2b1-e94a853f8494",
              "parentUUID": "6d9fca5c-0075-4e8e-8036-3e899277c2c0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create user in dashboard from browser firefox",
              "fullTitle": "User Create user in dashboard from browser firefox",
              "timedOut": false,
              "duration": 11705,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            // Selections & Actions\n            \n            await driver.findElement(By.css('a > i.ri-icon.ri-user-3-line')).click();\n            await driver.findElement(By.css('button.btn.btn-primary')).click();\n            \n            await driver.wait(until.elementsLocated(By.css(`div.card-wrapper`)));\n            let cardForm = await driver.findElement(By.css('.card-wrapper')).isDisplayed();\n            let cardFormTitle = await driver.findElement(By.css(\".card-wrapper .card .card-header h3\")).getText();\n\n            // Fill the Form\n            await driver.wait(until.elementsLocated(By.css(`div.program-card`)));\n            let selectUserRole = await driver.findElement(By.css(\".program-card\"));\n            await selectUserRole.click();\n            \n            // Get the results\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            // Result Output\n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(cardForm).to.eq(true);\n            expect(cardFormTitle).to.eq(\"Create Users\");\n\n            expect(await selectUserRole.getAttribute('class')).contain('bg-primary');",
              "err": {
                "message": "AssertionError: expected 'w-100 border-0 program-card' to include 'bg-primary'",
                "estack": "AssertionError: expected 'w-100 border-0 program-card' to include 'bg-primary'\n    at Context.<anonymous> (file:///D:/allbasic/nodejs/selenium/testingapp/test/Dashboard/User/create.js:65:64)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "9fae24eb-9f1f-47e4-82b7-222752288fed",
              "parentUUID": "6d9fca5c-0075-4e8e-8036-3e899277c2c0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "c8dece29-acdf-4009-a2b1-e94a853f8494"
          ],
          "failures": [
            "9fae24eb-9f1f-47e4-82b7-222752288fed"
          ],
          "pending": [],
          "skipped": [],
          "duration": 21039,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "ee26c397-d86d-4c45-848a-9769cbdae399",
          "title": "Landing Page",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\home.js",
          "file": "\\test\\home.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Landing Page\"",
              "fullTitle": "Landing Page \"after each\" hook in \"Landing Page\"",
              "timedOut": false,
              "duration": 3502,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "f56902aa-50f7-4046-8a24-73a6dce1ae7d",
              "parentUUID": "ee26c397-d86d-4c45-848a-9769cbdae399",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check home of landing page from browser chrome",
              "fullTitle": "Landing Page Check home of landing page from browser chrome",
              "timedOut": false,
              "duration": 2666,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, parseToDomain(appHost));\n            await driver.manage().window().maximize();\n            \n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            const home = await driver.findElement(By.css('#home')).isDisplayed();\n            expect(home).to.eq(true);",
              "err": {},
              "uuid": "74763ac9-3de9-459e-937d-644e800f97c3",
              "parentUUID": "ee26c397-d86d-4c45-848a-9769cbdae399",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check home of landing page from browser firefox",
              "fullTitle": "Landing Page Check home of landing page from browser firefox",
              "timedOut": false,
              "duration": 3749,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, parseToDomain(appHost));\n            await driver.manage().window().maximize();\n            \n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            const home = await driver.findElement(By.css('#home')).isDisplayed();\n            expect(home).to.eq(true);",
              "err": {},
              "uuid": "796532ad-b5e6-416b-a780-d931cb11fbc4",
              "parentUUID": "ee26c397-d86d-4c45-848a-9769cbdae399",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "74763ac9-3de9-459e-937d-644e800f97c3",
            "796532ad-b5e6-416b-a780-d931cb11fbc4"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6415,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "94165252-8070-4801-97fd-8a7cc5fe68b0",
          "title": "Login",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\login.js",
          "file": "\\test\\login.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 3531,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "59ff2aa7-bed7-4808-89af-b3f3eb0ce9d5",
              "parentUUID": "94165252-8070-4801-97fd-8a7cc5fe68b0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login to dashboard from browser chrome",
              "fullTitle": "Login Login to dashboard from browser chrome",
              "timedOut": false,
              "duration": 8234,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "05b8c932-15da-4800-b815-3baf59e5cda9",
              "parentUUID": "94165252-8070-4801-97fd-8a7cc5fe68b0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login to dashboard from browser firefox",
              "fullTitle": "Login Login to dashboard from browser firefox",
              "timedOut": false,
              "duration": 9267,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "b6c41841-21c2-4ecc-8a79-117ca580e5e5",
              "parentUUID": "94165252-8070-4801-97fd-8a7cc5fe68b0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "05b8c932-15da-4800-b815-3baf59e5cda9",
            "b6c41841-21c2-4ecc-8a79-117ca580e5e5"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 17501,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "33906e9f-1fa3-4c3d-be94-3d32299f87db",
          "title": "Logout",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\logout.js",
          "file": "\\test\\logout.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Logout\"",
              "fullTitle": "Logout \"after each\" hook in \"Logout\"",
              "timedOut": false,
              "duration": 3552,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "0f77a79d-fc08-4a39-9ecd-aaa838e3412e",
              "parentUUID": "33906e9f-1fa3-4c3d-be94-3d32299f87db",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Logout from browser chrome",
              "fullTitle": "Logout Logout from browser chrome",
              "timedOut": false,
              "duration": 10708,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.manage().window().maximize();\n\n            // login to the application\n            await enterDashboard(driver, user);\n            \n            await driver.findElement(By.css('.dropdown.navbar-profile')).click();\n            await driver.findElement(By.css('.dropdown-menu.dropdown-menu-left > button')).click();\n            await driver.findElement(By.css('.box-action > button.btn-danger')).click();\n\n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            \n            const pageUrl = await driver.getCurrentUrl();\n\n            expect(pageUrl).to.eq(parseToDomain(appHost));",
              "err": {
                "message": "AssertionError: expected 'https://alkademi.id/' to equal 'https:alkademi.id'",
                "estack": "AssertionError: expected 'https://alkademi.id/' to equal 'https:alkademi.id'\n    at Context.<anonymous> (file:///D:/allbasic/nodejs/selenium/testingapp/test/logout.js:47:32)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- https://alkademi.id/\n+ https:alkademi.id\n"
              },
              "uuid": "8008595c-c656-4fcb-aa88-95ebcb525a66",
              "parentUUID": "33906e9f-1fa3-4c3d-be94-3d32299f87db",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout from browser firefox",
              "fullTitle": "Logout Logout from browser firefox",
              "timedOut": false,
              "duration": 12615,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.manage().window().maximize();\n\n            // login to the application\n            await enterDashboard(driver, user);\n            \n            await driver.findElement(By.css('.dropdown.navbar-profile')).click();\n            await driver.findElement(By.css('.dropdown-menu.dropdown-menu-left > button')).click();\n            await driver.findElement(By.css('.box-action > button.btn-danger')).click();\n\n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            \n            const pageUrl = await driver.getCurrentUrl();\n\n            expect(pageUrl).to.eq(parseToDomain(appHost));",
              "err": {
                "message": "AssertionError: expected 'https://alkademi.id/' to equal 'https:alkademi.id'",
                "estack": "AssertionError: expected 'https://alkademi.id/' to equal 'https:alkademi.id'\n    at Context.<anonymous> (file:///D:/allbasic/nodejs/selenium/testingapp/test/logout.js:47:32)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": "- https://alkademi.id/\n+ https:alkademi.id\n"
              },
              "uuid": "54b6e020-e52a-430f-962c-a3bd06d152a1",
              "parentUUID": "33906e9f-1fa3-4c3d-be94-3d32299f87db",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "8008595c-c656-4fcb-aa88-95ebcb525a66",
            "54b6e020-e52a-430f-962c-a3bd06d152a1"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23323,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "reportFilename": "test-results",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}