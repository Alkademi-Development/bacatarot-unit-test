{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-29T06:08:55.141Z",
    "end": "2023-05-29T06:10:17.618Z",
    "duration": 82477,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "513adff1-19a1-4497-9452-a0d1bfec1f1c",
      "title": "",
      "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\dashboard\\index.js",
      "file": "\\test\\dashboard\\index.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "4b445a3e-d086-442c-8139-ee9bf435d172",
          "title": "Dashboard",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\dashboard\\index.js",
          "file": "\\test\\dashboard\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Dashboard\"",
              "fullTitle": "Dashboard \"after each\" hook in \"Dashboard\"",
              "timedOut": false,
              "duration": 4173,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "06991ed9-04ba-4ebf-9cf1-fa98d9e33177",
              "parentUUID": "4b445a3e-d086-442c-8139-ee9bf435d172",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for analytic charts chrome",
              "fullTitle": "Dashboard Check for analytic charts chrome",
              "timedOut": false,
              "duration": 39074,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.get(appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "79153061-bbbc-4d6c-865a-84a438afd32a",
              "parentUUID": "4b445a3e-d086-442c-8139-ee9bf435d172",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for analytic charts firefox",
              "fullTitle": "Dashboard Check for analytic charts firefox",
              "timedOut": false,
              "duration": 36131,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.get(appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "ff7759e6-1288-45bf-8d19-050a3473da57",
              "parentUUID": "4b445a3e-d086-442c-8139-ee9bf435d172",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "79153061-bbbc-4d6c-865a-84a438afd32a",
            "ff7759e6-1288-45bf-8d19-050a3473da57"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 75205,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "reportFilename": "test-results",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}