{
  "stats": {
    "suites": 1,
    "tests": 6,
    "passes": 6,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-23T04:01:16.094Z",
    "end": "2023-05-23T04:02:17.572Z",
    "duration": 61478,
    "testsRegistered": 6,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f8c19f23-d993-413a-bb75-977a5868ca13",
      "title": "",
      "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\login.js",
      "file": "\\test\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "526e3607-89b6-4d39-815c-7746622e9df0",
          "title": "Login",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\login.js",
          "file": "\\test\\login.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 3090,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "16b4b792-0d62-4c56-b266-5f6a187349be",
              "parentUUID": "526e3607-89b6-4d39-815c-7746622e9df0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login to dashboard from browser chrome",
              "fullTitle": "Login Login to dashboard from browser chrome",
              "timedOut": false,
              "duration": 19681,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "a29900c9-d853-495e-bdfd-f91cca915120",
              "parentUUID": "526e3607-89b6-4d39-815c-7746622e9df0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failed login (wrong email) from browser chrome",
              "fullTitle": "Login Failed login (wrong email) from browser chrome",
              "timedOut": false,
              "duration": 3075,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n    .forBrowser(browser)\n    .build();\n// navigate to the application\nawait driver.get(appHost);\n// login to the application\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email + 'a', Key.RETURN);\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\nawait driver.wait(until.elementsLocated(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]`)));\nlet typeStatus = await driver.executeScript(`return document.querySelector('.alert.alert-warning').innerText`),\ntextStatus = await driver.executeScript(`return document.querySelectorAll('.alert.alert-warning').length`);\nassert.strictEqual(typeStatus.includes(\"email\"), true); \nassert.strictEqual(textStatus > 1, typeStatus > 1);",
              "err": {},
              "uuid": "6213710f-9fcc-4f6a-8279-910dbc31004e",
              "parentUUID": "526e3607-89b6-4d39-815c-7746622e9df0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "failed login (wrong password)",
              "fullTitle": "Login failed login (wrong password)",
              "timedOut": false,
              "duration": 3083,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n    .forBrowser(browser)\n    .build();\n// navigate to the application\nawait driver.get(appHost);\n// login to the application\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password[0], Key.RETURN);\nawait driver.wait(until.elementsLocated(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/div[1]`)));\nlet typeStatus = await driver.executeScript(`return document.querySelector('.alert.alert-warning').innerText`),\ntextStatus = await driver.executeScript(`return document.querySelectorAll('.alert.alert-warning').length`);\nassert.strictEqual(typeStatus.includes(\"password\"), true); \nassert.strictEqual(textStatus > 1, typeStatus > 1);",
              "err": {},
              "uuid": "86b3182f-0e9a-40ed-b471-d97d0753286f",
              "parentUUID": "526e3607-89b6-4d39-815c-7746622e9df0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login to dashboard from browser MicrosoftEdge",
              "fullTitle": "Login Login to dashboard from browser MicrosoftEdge",
              "timedOut": false,
              "duration": 11274,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "dba0a8f4-d93d-40cd-91d5-be0ff806580d",
              "parentUUID": "526e3607-89b6-4d39-815c-7746622e9df0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Failed login (wrong email) from browser MicrosoftEdge",
              "fullTitle": "Login Failed login (wrong email) from browser MicrosoftEdge",
              "timedOut": false,
              "duration": 2813,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n    .forBrowser(browser)\n    .build();\n// navigate to the application\nawait driver.get(appHost);\n// login to the application\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email + 'a', Key.RETURN);\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\nawait driver.wait(until.elementsLocated(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]`)));\nlet typeStatus = await driver.executeScript(`return document.querySelector('.alert.alert-warning').innerText`),\ntextStatus = await driver.executeScript(`return document.querySelectorAll('.alert.alert-warning').length`);\nassert.strictEqual(typeStatus.includes(\"email\"), true); \nassert.strictEqual(textStatus > 1, typeStatus > 1);",
              "err": {},
              "uuid": "ff01656f-a89e-4913-9d09-08e284ed7367",
              "parentUUID": "526e3607-89b6-4d39-815c-7746622e9df0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "failed login (wrong password)",
              "fullTitle": "Login failed login (wrong password)",
              "timedOut": false,
              "duration": 2997,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n    .forBrowser(browser)\n    .build();\n// navigate to the application\nawait driver.get(appHost);\n// login to the application\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password[0], Key.RETURN);\nawait driver.wait(until.elementsLocated(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/div[1]`)));\nlet typeStatus = await driver.executeScript(`return document.querySelector('.alert.alert-warning').innerText`),\ntextStatus = await driver.executeScript(`return document.querySelectorAll('.alert.alert-warning').length`);\nassert.strictEqual(typeStatus.includes(\"password\"), true); \nassert.strictEqual(textStatus > 1, typeStatus > 1);",
              "err": {},
              "uuid": "f0d2d065-7886-44fb-ae61-21f71acd6266",
              "parentUUID": "526e3607-89b6-4d39-815c-7746622e9df0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a29900c9-d853-495e-bdfd-f91cca915120",
            "6213710f-9fcc-4f6a-8279-910dbc31004e",
            "86b3182f-0e9a-40ed-b471-d97d0753286f",
            "dba0a8f4-d93d-40cd-91d5-be0ff806580d",
            "ff01656f-a89e-4913-9d09-08e284ed7367",
            "f0d2d065-7886-44fb-ae61-21f71acd6266"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 42923,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "D:/allbasic/nodejs/selenium/testingapp/testReports",
        "reportFilename": "test-results",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}