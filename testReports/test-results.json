{
  "stats": {
    "suites": 1,
    "tests": 3,
    "passes": 3,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-23T03:24:46.950Z",
    "end": "2023-05-23T03:25:26.109Z",
    "duration": 39159,
    "testsRegistered": 3,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "fcf81925-542a-411a-b2f8-5974361d7ee6",
      "title": "",
      "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\login.js",
      "file": "\\test\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a9ba2f1e-fdae-4f97-8145-495e18a4d000",
          "title": "login to app",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\login.js",
          "file": "\\test\\login.js",
          "beforeHooks": [
            {
              "title": "\"before each\" hook in \"login to app\"",
              "fullTitle": "login to app \"before each\" hook in \"login to app\"",
              "timedOut": null,
              "duration": 3138,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "driver = await new Builder()\n    .forBrowser(index)\n    .build();",
              "err": {},
              "uuid": "6f9ccadf-3471-442c-aea7-be0ca92afd3a",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"login to app\"",
              "fullTitle": "login to app \"after each\" hook in \"login to app\"",
              "timedOut": null,
              "duration": 0,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": null,
              "context": null,
              "code": "if(this.currentTest.state === 'failed') {\n    await driver.quit();\n}",
              "err": {},
              "uuid": "b8e24c04-226a-4a24-b041-685e73e474ca",
              "parentUUID": null,
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "successfully login",
              "fullTitle": "login to app successfully login",
              "timedOut": null,
              "duration": 15093,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// navigate to the application\n        await driver.get(appHost);\n        // login to the application\n        await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n        await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n        await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n        let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n        // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n        const networkData = await driver.executeScript(`\n            const performanceEntries = performance.getEntriesByType('resource');\n            const requests = performanceEntries.map(entry => {\n                return {\n                    entry,\n                    url: entry.name,\n                    method: entry.initiatorType,\n                    type: entry.entryType,\n                };\n            });\n            \n            return requests;\n        `);\n        // Tampilkan data jaringan\n        let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n        let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n        userData = JSON.parse(userData);\n        \n        assert.strictEqual(textStatus > 1, textStatus > 1); \n        expect(correctUrl.url).to.includes(\"v1/user/me\");\n        expect(userData.id).to.greaterThan(0);\n        // close the browser\n        await driver.sleep(3000);\n        await driver.quit();",
              "err": {},
              "uuid": "9c316522-84bb-40e3-8a10-9b08738dded9",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "failed login (wrong email)",
              "fullTitle": "login to app failed login (wrong email)",
              "timedOut": null,
              "duration": 6235,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// navigate to the application\n        await driver.get(appHost);\n        // login to the application\n        await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email + 'a', Key.RETURN);\n        await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n        await driver.wait(until.elementsLocated(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]`)));\n        let typeStatus = await driver.executeScript(`return document.querySelector('.alert.alert-warning').innerText`),\n        textStatus = await driver.executeScript(`return document.querySelectorAll('.alert.alert-warning').length`);\n        assert.strictEqual(typeStatus.includes(\"email\"), true); \n        assert.strictEqual(textStatus > 1, typeStatus > 1); \n        // close the browser\n        await driver.sleep(3000);\n        await driver.quit();",
              "err": {},
              "uuid": "d3fcfceb-4dcf-4e36-9e86-09fb0967a5c5",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            },
            {
              "title": "failed login (wrong password)",
              "fullTitle": "login to app failed login (wrong password)",
              "timedOut": null,
              "duration": 6488,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// navigate to the application\nawait driver.get(appHost);\n// login to the application\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\nawait driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password[0], Key.RETURN);\nawait driver.wait(until.elementsLocated(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/div[1]`)));\nlet typeStatus = await driver.executeScript(`return document.querySelector('.alert.alert-warning').innerText`),\ntextStatus = await driver.executeScript(`return document.querySelectorAll('.alert.alert-warning').length`);\nassert.strictEqual(typeStatus.includes(\"password\"), true); \nassert.strictEqual(textStatus > 1, typeStatus > 1); \n// close the browser\nawait driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "8d23c38c-5e96-4480-b2bb-bad33eeb9993",
              "parentUUID": null,
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9c316522-84bb-40e3-8a10-9b08738dded9",
            "d3fcfceb-4dcf-4e36-9e86-09fb0967a5c5",
            "8d23c38c-5e96-4480-b2bb-bad33eeb9993"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 27816,
          "root": false,
          "rootEmpty": false,
          "_timeout": null
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "D:/allbasic/nodejs/selenium/testingapp/testReports",
        "reportFilename": "test-results",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}