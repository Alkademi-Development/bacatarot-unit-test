{
  "stats": {
    "suites": 7,
    "tests": 14,
    "passes": 14,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-29T01:35:54.184Z",
    "end": "2023-05-29T01:38:57.116Z",
    "duration": 182932,
    "testsRegistered": 14,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "59c873b2-d7ff-4052-9328-19d0b0d798a8",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "6c801bc5-4af8-430e-ae91-06a55b82391d",
          "title": "Assignment",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\Classroom\\Assignment\\index.js",
          "file": "\\test\\Dashboard\\Classroom\\Assignment\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Assignment\"",
              "fullTitle": "Assignment \"after each\" hook in \"Assignment\"",
              "timedOut": false,
              "duration": 3657,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "e95b7dae-4ee7-40e6-99d8-a63598d64721",
              "parentUUID": "6c801bc5-4af8-430e-ae91-06a55b82391d",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for class card chrome",
              "fullTitle": "Assignment Check for class card chrome",
              "timedOut": false,
              "duration": 9543,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            \n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementLocated(By.css(`div.card-class`)));\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "d93fc46a-fa3c-4266-891a-8fb83d3ff662",
              "parentUUID": "6c801bc5-4af8-430e-ae91-06a55b82391d",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for class card firefox",
              "fullTitle": "Assignment Check for class card firefox",
              "timedOut": false,
              "duration": 10784,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            \n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementLocated(By.css(`div.card-class`)));\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "9d23fd58-8597-4e5b-afd5-bbec4182ce29",
              "parentUUID": "6c801bc5-4af8-430e-ae91-06a55b82391d",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "d93fc46a-fa3c-4266-891a-8fb83d3ff662",
            "9d23fd58-8597-4e5b-afd5-bbec4182ce29"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20327,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "76596b8c-6a4f-4726-99c6-478c1df598aa",
          "title": "Classroom",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\Classroom\\index.js",
          "file": "\\test\\Dashboard\\Classroom\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Classroom\"",
              "fullTitle": "Classroom \"after each\" hook in \"Classroom\"",
              "timedOut": false,
              "duration": 3674,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "1c545add-4c3e-469f-9780-ea781f391184",
              "parentUUID": "76596b8c-6a4f-4726-99c6-478c1df598aa",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for class card chrome",
              "fullTitle": "Classroom Check for class card chrome",
              "timedOut": false,
              "duration": 9855,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            \n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click()\n\n            const cardClass = driver.findElement(By.css(`div.card-class`));\n            await driver.wait(until.stalenessOf(cardClass));\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "e91337db-fa4e-4170-a234-1b6a50206bf9",
              "parentUUID": "76596b8c-6a4f-4726-99c6-478c1df598aa",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for class card firefox",
              "fullTitle": "Classroom Check for class card firefox",
              "timedOut": false,
              "duration": 11203,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            \n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click()\n\n            const cardClass = driver.findElement(By.css(`div.card-class`));\n            await driver.wait(until.stalenessOf(cardClass));\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "4c945edd-f08f-47cc-ab97-a89daebd172a",
              "parentUUID": "76596b8c-6a4f-4726-99c6-478c1df598aa",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "e91337db-fa4e-4170-a234-1b6a50206bf9",
            "4c945edd-f08f-47cc-ab97-a89daebd172a"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21058,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "9f4e4115-c19f-42cb-b8c2-e5d581189998",
          "title": "Dashboard",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\index.js",
          "file": "\\test\\Dashboard\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Dashboard\"",
              "fullTitle": "Dashboard \"after each\" hook in \"Dashboard\"",
              "timedOut": false,
              "duration": 3666,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "b197dc06-6d93-40c5-9dc2-17a7f7860a31",
              "parentUUID": "9f4e4115-c19f-42cb-b8c2-e5d581189998",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for analytic charts chrome",
              "fullTitle": "Dashboard Check for analytic charts chrome",
              "timedOut": false,
              "duration": 9137,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.get(appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "a416a2c2-dfbf-4353-b14c-a6f9f361dd4f",
              "parentUUID": "9f4e4115-c19f-42cb-b8c2-e5d581189998",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for analytic charts firefox",
              "fullTitle": "Dashboard Check for analytic charts firefox",
              "timedOut": false,
              "duration": 10987,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.get(appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "4c3693ca-761c-463e-ab01-b9b6ac544581",
              "parentUUID": "9f4e4115-c19f-42cb-b8c2-e5d581189998",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a416a2c2-dfbf-4353-b14c-a6f9f361dd4f",
            "4c3693ca-761c-463e-ab01-b9b6ac544581"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 20124,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "1a8a1052-08d8-4d17-9fd9-adfda255d00a",
          "title": "User",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\User\\create.js",
          "file": "\\test\\Dashboard\\User\\create.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"User\"",
              "fullTitle": "User \"after each\" hook in \"User\"",
              "timedOut": false,
              "duration": 3694,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "9d8bb6db-241b-406a-9446-990be4a3a3a5",
              "parentUUID": "1a8a1052-08d8-4d17-9fd9-adfda255d00a",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create user in dashboard from browser chrome",
              "fullTitle": "User Create user in dashboard from browser chrome",
              "timedOut": false,
              "duration": 9539,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            // Selections & Actions\n            \n            await driver.findElement(By.css('a > i.ri-icon.ri-user-3-line')).click();\n            await driver.findElement(By.css('button.btn.btn-primary')).click();\n            \n            await driver.wait(until.elementsLocated(By.css(`div.card-wrapper`)));\n            let cardForm = await driver.findElement(By.css('.card-wrapper')).isDisplayed();\n            let cardFormTitle = await driver.findElement(By.css(\".card-wrapper .card .card-header h3\")).getText();\n\n            // Fill the Form\n            await driver.wait(until.elementsLocated(By.css(`div.program-card`)));\n            let selectUserRole = await driver.findElement(By.css(\".program-card\"));\n            await selectUserRole.click();\n            \n            // Get the results\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            // Result Output\n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(cardForm).to.eq(true);\n            expect(cardFormTitle).to.eq(\"Create Users\");\n\n            expect(await selectUserRole.getAttribute('class')).contain('bg-primary');",
              "err": {},
              "uuid": "4e821dd9-0bd3-4578-9655-2420c38fb9cc",
              "parentUUID": "1a8a1052-08d8-4d17-9fd9-adfda255d00a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create user in dashboard from browser firefox",
              "fullTitle": "User Create user in dashboard from browser firefox",
              "timedOut": false,
              "duration": 11505,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            // Selections & Actions\n            \n            await driver.findElement(By.css('a > i.ri-icon.ri-user-3-line')).click();\n            await driver.findElement(By.css('button.btn.btn-primary')).click();\n            \n            await driver.wait(until.elementsLocated(By.css(`div.card-wrapper`)));\n            let cardForm = await driver.findElement(By.css('.card-wrapper')).isDisplayed();\n            let cardFormTitle = await driver.findElement(By.css(\".card-wrapper .card .card-header h3\")).getText();\n\n            // Fill the Form\n            await driver.wait(until.elementsLocated(By.css(`div.program-card`)));\n            let selectUserRole = await driver.findElement(By.css(\".program-card\"));\n            await selectUserRole.click();\n            \n            // Get the results\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            // Result Output\n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(cardForm).to.eq(true);\n            expect(cardFormTitle).to.eq(\"Create Users\");\n\n            expect(await selectUserRole.getAttribute('class')).contain('bg-primary');",
              "err": {},
              "uuid": "4a1bfc77-d90f-43d9-a078-ca2f39b048a1",
              "parentUUID": "1a8a1052-08d8-4d17-9fd9-adfda255d00a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4e821dd9-0bd3-4578-9655-2420c38fb9cc",
            "4a1bfc77-d90f-43d9-a078-ca2f39b048a1"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 21044,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "6d48f64e-884b-4320-abb3-d692e6b7d60f",
          "title": "Landing Page",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\home.js",
          "file": "\\test\\home.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Landing Page\"",
              "fullTitle": "Landing Page \"after each\" hook in \"Landing Page\"",
              "timedOut": false,
              "duration": 3632,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "240a073a-3edf-47f9-83eb-2dab3a61181d",
              "parentUUID": "6d48f64e-884b-4320-abb3-d692e6b7d60f",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check home of landing page from browser chrome",
              "fullTitle": "Landing Page Check home of landing page from browser chrome",
              "timedOut": false,
              "duration": 2575,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, parseToDomain(appHost));\n            await driver.manage().window().maximize();\n            \n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            const home = await driver.findElement(By.css('#home')).isDisplayed();\n            expect(home).to.eq(true);",
              "err": {},
              "uuid": "55282615-7828-4922-aeb1-02c0c8ce9ce9",
              "parentUUID": "6d48f64e-884b-4320-abb3-d692e6b7d60f",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check home of landing page from browser firefox",
              "fullTitle": "Landing Page Check home of landing page from browser firefox",
              "timedOut": false,
              "duration": 4225,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, parseToDomain(appHost));\n            await driver.manage().window().maximize();\n            \n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            const home = await driver.findElement(By.css('#home')).isDisplayed();\n            expect(home).to.eq(true);",
              "err": {},
              "uuid": "b16bf516-d043-4c54-bcfb-8eacb64a447e",
              "parentUUID": "6d48f64e-884b-4320-abb3-d692e6b7d60f",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "55282615-7828-4922-aeb1-02c0c8ce9ce9",
            "b16bf516-d043-4c54-bcfb-8eacb64a447e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 6800,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "9b229f8c-4f8f-41b7-9484-ba9faea18b10",
          "title": "Login",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\login.js",
          "file": "\\test\\login.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 3683,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "c28451a2-7bbf-4141-9102-8ff12e764536",
              "parentUUID": "9b229f8c-4f8f-41b7-9484-ba9faea18b10",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login to dashboard from browser chrome",
              "fullTitle": "Login Login to dashboard from browser chrome",
              "timedOut": false,
              "duration": 8986,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "9102936f-e06a-4a6a-810c-91cae7f31c5d",
              "parentUUID": "9b229f8c-4f8f-41b7-9484-ba9faea18b10",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login to dashboard from browser firefox",
              "fullTitle": "Login Login to dashboard from browser firefox",
              "timedOut": false,
              "duration": 10433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "295e51b3-33a8-49ea-b24d-66dc7e0e7337",
              "parentUUID": "9b229f8c-4f8f-41b7-9484-ba9faea18b10",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "9102936f-e06a-4a6a-810c-91cae7f31c5d",
            "295e51b3-33a8-49ea-b24d-66dc7e0e7337"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 19419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "3f8f1591-7ce8-4f24-b0e5-844e0253ef9e",
          "title": "Logout",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\logout.js",
          "file": "\\test\\logout.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Logout\"",
              "fullTitle": "Logout \"after each\" hook in \"Logout\"",
              "timedOut": false,
              "duration": 3790,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "bb329499-e005-4ff6-a743-c38ce99f47f8",
              "parentUUID": "3f8f1591-7ce8-4f24-b0e5-844e0253ef9e",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Logout from browser chrome",
              "fullTitle": "Logout Logout from browser chrome",
              "timedOut": false,
              "duration": 12822,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost);\n\n            await driver.manage().window().maximize();\n\n            // login to the application\n            await enterDashboard(driver, user);\n            \n            await driver.findElement(By.css('.dropdown.navbar-profile')).click();\n            await driver.findElement(By.css('.dropdown-menu.dropdown-menu-left > button')).click();\n            await driver.findElement(By.css('.box-action > button.btn-danger')).click();\n\n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            \n            const pageUrl = await driver.getCurrentUrl();\n\n            expect(pageUrl).to.eq(parseToDomain(appHost));",
              "err": {},
              "uuid": "a14409d3-b0f6-4675-89af-f8a437898f90",
              "parentUUID": "3f8f1591-7ce8-4f24-b0e5-844e0253ef9e",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout from browser firefox",
              "fullTitle": "Logout Logout from browser firefox",
              "timedOut": false,
              "duration": 14140,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost);\n\n            await driver.manage().window().maximize();\n\n            // login to the application\n            await enterDashboard(driver, user);\n            \n            await driver.findElement(By.css('.dropdown.navbar-profile')).click();\n            await driver.findElement(By.css('.dropdown-menu.dropdown-menu-left > button')).click();\n            await driver.findElement(By.css('.box-action > button.btn-danger')).click();\n\n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            \n            const pageUrl = await driver.getCurrentUrl();\n\n            expect(pageUrl).to.eq(parseToDomain(appHost));",
              "err": {},
              "uuid": "48e9990b-98ee-4b34-89d1-4370e2186991",
              "parentUUID": "3f8f1591-7ce8-4f24-b0e5-844e0253ef9e",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a14409d3-b0f6-4675-89af-f8a437898f90",
            "48e9990b-98ee-4b34-89d1-4370e2186991"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26962,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "reportFilename": "test-results",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}