{
  "stats": {
    "suites": 6,
    "tests": 12,
    "passes": 8,
    "pending": 0,
    "failures": 4,
    "start": "2023-05-26T07:34:15.978Z",
    "end": "2023-05-26T07:40:27.950Z",
    "duration": 371972,
    "testsRegistered": 12,
    "passPercent": 66.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "a4a7ed90-96ff-4e29-b86d-88bda7599a5f",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "c04ab7c3-4e73-43a9-b9e2-4fd6ac8bb217",
          "title": "Classroom",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\Classroom\\index.js",
          "file": "\\test\\Dashboard\\Classroom\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Classroom\"",
              "fullTitle": "Classroom \"after each\" hook in \"Classroom\"",
              "timedOut": false,
              "duration": 3666,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "fd4a53fd-fd5c-4427-8353-bceb1067bce1",
              "parentUUID": "c04ab7c3-4e73-43a9-b9e2-4fd6ac8bb217",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for class card chrome",
              "fullTitle": "Classroom Check for class card chrome",
              "timedOut": false,
              "duration": 16105,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            \n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementsLocated(By.css(`div.card-class`)), 10000);\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "1f645080-d096-44c1-8a53-14f71f2fbdca",
              "parentUUID": "c04ab7c3-4e73-43a9-b9e2-4fd6ac8bb217",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for class card firefox",
              "fullTitle": "Classroom Check for class card firefox",
              "timedOut": false,
              "duration": 22056,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            \n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementsLocated(By.css(`div.card-class`)), 10000);\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "5e2f606b-d52e-4bb3-912c-cadc5b4a15bf",
              "parentUUID": "c04ab7c3-4e73-43a9-b9e2-4fd6ac8bb217",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "1f645080-d096-44c1-8a53-14f71f2fbdca",
            "5e2f606b-d52e-4bb3-912c-cadc5b4a15bf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 38161,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "2a3053d0-b135-4430-97a5-28d06b645ce1",
          "title": "Dashboard",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\index.js",
          "file": "\\test\\Dashboard\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Dashboard\"",
              "fullTitle": "Dashboard \"after each\" hook in \"Dashboard\"",
              "timedOut": false,
              "duration": 4293,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "a7e2c247-827a-4321-9410-1a292d3d1b57",
              "parentUUID": "2a3053d0-b135-4430-97a5-28d06b645ce1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for analytic charts chrome",
              "fullTitle": "Dashboard Check for analytic charts chrome",
              "timedOut": false,
              "duration": 18600,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.get(appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "92c6fd37-f6a5-4541-a6d9-934f4bc48bec",
              "parentUUID": "2a3053d0-b135-4430-97a5-28d06b645ce1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for analytic charts firefox",
              "fullTitle": "Dashboard Check for analytic charts firefox",
              "timedOut": false,
              "duration": 17922,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.get(appHost);\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "a2668b08-fdc8-4165-b5e3-2e6ab9ae1587",
              "parentUUID": "2a3053d0-b135-4430-97a5-28d06b645ce1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "92c6fd37-f6a5-4541-a6d9-934f4bc48bec",
            "a2668b08-fdc8-4165-b5e3-2e6ab9ae1587"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 36522,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "b60efa10-f03c-4fe7-bf27-0be056664b6b",
          "title": "User",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\User\\create.js",
          "file": "\\test\\Dashboard\\User\\create.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"User\"",
              "fullTitle": "User \"after each\" hook in \"User\"",
              "timedOut": false,
              "duration": 4148,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "6e03ab06-19f0-4747-b317-15e002a08275",
              "parentUUID": "b60efa10-f03c-4fe7-bf27-0be056664b6b",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create user in dashboard from browser chrome",
              "fullTitle": "User Create user in dashboard from browser chrome",
              "timedOut": false,
              "duration": 22344,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            // Selections & Actions\n            \n            await driver.findElement(By.css('a > i.ri-icon.ri-user-3-line')).click();\n            await driver.findElement(By.css('button.btn.btn-primary')).click();\n            \n            await driver.wait(until.elementsLocated(By.css(`div.card-wrapper`)));\n            let cardForm = await driver.findElement(By.css('.card-wrapper')).isDisplayed();\n            let cardFormTitle = await driver.findElement(By.css(\".card-wrapper .card .card-header h3\")).getText();\n\n            // Fill the Form\n            await driver.wait(until.elementsLocated(By.css(`div.program-card`)));\n            let selectUserRole = await driver.findElement(By.css(\".program-card\"));\n            await selectUserRole.click();\n            \n            // Get the results\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            // Result Output\n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(cardForm).to.eq(true);\n            expect(cardFormTitle).to.eq(\"Create Users\");\n\n            expect(await selectUserRole.getAttribute('class')).contain('bg-primary');",
              "err": {},
              "uuid": "6b8de57f-7ab2-46be-b45c-19508afce2d9",
              "parentUUID": "b60efa10-f03c-4fe7-bf27-0be056664b6b",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create user in dashboard from browser firefox",
              "fullTitle": "User Create user in dashboard from browser firefox",
              "timedOut": false,
              "duration": 28354,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            await driver.manage().window().maximize();\n\n            // Selections & Actions\n            \n            await driver.findElement(By.css('a > i.ri-icon.ri-user-3-line')).click();\n            await driver.findElement(By.css('button.btn.btn-primary')).click();\n            \n            await driver.wait(until.elementsLocated(By.css(`div.card-wrapper`)));\n            let cardForm = await driver.findElement(By.css('.card-wrapper')).isDisplayed();\n            let cardFormTitle = await driver.findElement(By.css(\".card-wrapper .card .card-header h3\")).getText();\n\n            // Fill the Form\n            await driver.wait(until.elementsLocated(By.css(`div.program-card`)));\n            let selectUserRole = await driver.findElement(By.css(\".program-card\"));\n            await selectUserRole.click();\n            \n            // Get the results\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            // Result Output\n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(cardForm).to.eq(true);\n            expect(cardFormTitle).to.eq(\"Create Users\");\n\n            expect(await selectUserRole.getAttribute('class')).contain('bg-primary');",
              "err": {},
              "uuid": "a62dac90-1f34-4930-84e5-cdac32528703",
              "parentUUID": "b60efa10-f03c-4fe7-bf27-0be056664b6b",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "6b8de57f-7ab2-46be-b45c-19508afce2d9",
            "a62dac90-1f34-4930-84e5-cdac32528703"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 50698,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "26dd2fd4-c520-4faa-8b6a-719989087177",
          "title": "Landing Page",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\home.js",
          "file": "\\test\\home.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Landing Page\"",
              "fullTitle": "Landing Page \"after each\" hook in \"Landing Page\"",
              "timedOut": false,
              "duration": 3776,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "e6206b1a-170b-46fd-bd41-6452366092e9",
              "parentUUID": "26dd2fd4-c520-4faa-8b6a-719989087177",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check home of landing page from browser chrome",
              "fullTitle": "Landing Page Check home of landing page from browser chrome",
              "timedOut": false,
              "duration": 10348,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            await driver.manage().window().maximize();\n            \n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            const home = await driver.findElement(By.css('#home')).isDisplayed();\n            expect(home).to.eq(true);",
              "err": {
                "message": "TimeoutError: Waiting for at least one element to be located By(css selector, *[id=\"home\"])\nWait timed out after 5135ms",
                "estack": "TimeoutError: Waiting for at least one element to be located By(css selector, *[id=\"home\"])\nWait timed out after 5135ms\n    at D:\\allbasic\\nodejs\\selenium\\testingapp\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:17\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "11be874f-10a8-422b-baff-b035670438a0",
              "parentUUID": "26dd2fd4-c520-4faa-8b6a-719989087177",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check home of landing page from browser firefox",
              "fullTitle": "Landing Page Check home of landing page from browser firefox",
              "timedOut": false,
              "duration": 14405,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            await driver.manage().window().maximize();\n            \n            await driver.wait(until.elementsLocated(By.id('home')), 5000);\n            const home = await driver.findElement(By.css('#home')).isDisplayed();\n            expect(home).to.eq(true);",
              "err": {
                "message": "TimeoutError: Waiting for at least one element to be located By(css selector, *[id=\"home\"])\nWait timed out after 5145ms",
                "estack": "TimeoutError: Waiting for at least one element to be located By(css selector, *[id=\"home\"])\nWait timed out after 5145ms\n    at D:\\allbasic\\nodejs\\selenium\\testingapp\\node_modules\\selenium-webdriver\\lib\\webdriver.js:929:17\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)",
                "diff": null
              },
              "uuid": "5fd979fe-3654-4c15-bff1-c8319b354aab",
              "parentUUID": "26dd2fd4-c520-4faa-8b6a-719989087177",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "11be874f-10a8-422b-baff-b035670438a0",
            "5fd979fe-3654-4c15-bff1-c8319b354aab"
          ],
          "pending": [],
          "skipped": [],
          "duration": 24753,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "5aef28e0-d47a-4aaf-8518-4b50d5a4c0fe",
          "title": "Login",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\login.js",
          "file": "\\test\\login.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 3921,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "f1b6bd29-80cd-4c62-b8ca-31c51c3ce03c",
              "parentUUID": "5aef28e0-d47a-4aaf-8518-4b50d5a4c0fe",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login to dashboard from browser chrome",
              "fullTitle": "Login Login to dashboard from browser chrome",
              "timedOut": false,
              "duration": 20269,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "43b0fc56-f425-4f35-b1e5-1416eb8c4d00",
              "parentUUID": "5aef28e0-d47a-4aaf-8518-4b50d5a4c0fe",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login to dashboard from browser firefox",
              "fullTitle": "Login Login to dashboard from browser firefox",
              "timedOut": false,
              "duration": 27433,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            // login to the application\n            await enterDashboard(driver, user);\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "4864168e-b062-4860-bb3a-697a2c275dcf",
              "parentUUID": "5aef28e0-d47a-4aaf-8518-4b50d5a4c0fe",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "43b0fc56-f425-4f35-b1e5-1416eb8c4d00",
            "4864168e-b062-4860-bb3a-697a2c275dcf"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 47702,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "18a9185f-0eee-4773-bfbd-14ccacfa7f92",
          "title": "Logout",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\logout.js",
          "file": "\\test\\logout.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Logout\"",
              "fullTitle": "Logout \"after each\" hook in \"Logout\"",
              "timedOut": false,
              "duration": 4080,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "4aa4e2e1-2ccb-49c7-9670-138d13d08abb",
              "parentUUID": "18a9185f-0eee-4773-bfbd-14ccacfa7f92",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Logout from browser chrome",
              "fullTitle": "Logout Logout from browser chrome",
              "timedOut": false,
              "duration": 61208,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.manage().window().maximize();\n\n            // login to the application\n            await enterDashboard(driver, user);\n            \n            await driver.findElement(By.css('.dropdown.navbar-profile')).click();\n            await driver.findElement(By.css('.dropdown-menu.dropdown-menu-left > button')).click();\n            await driver.findElement(By.css('.box-action > button.btn-danger')).click();\n\n            await driver.wait(until.elementsLocated(By.id('home')));\n            \n            const pageUrl = await driver.getCurrentUrl();\n\n            expect(pageUrl).to.eq(BASE_URL);",
              "err": {
                "message": "WebDriverError: target frame detached\n  (failed to check if window was closed: disconnected: Unable to receive message from renderer)\n  (Session info: chrome=113.0.5672.93)",
                "estack": "WebDriverError: target frame detached\n  (failed to check if window was closed: disconnected: Unable to receive message from renderer)\n  (Session info: chrome=113.0.5672.93)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async Driver.findElements (node_modules\\selenium-webdriver\\lib\\webdriver.js:1089:17)",
                "diff": null
              },
              "uuid": "eefb825e-7ba0-46f7-9133-55451dfe536f",
              "parentUUID": "18a9185f-0eee-4773-bfbd-14ccacfa7f92",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout from browser firefox",
              "fullTitle": "Logout Logout from browser firefox",
              "timedOut": false,
              "duration": 70794,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n\n            await driver.manage().window().maximize();\n\n            // login to the application\n            await enterDashboard(driver, user);\n            \n            await driver.findElement(By.css('.dropdown.navbar-profile')).click();\n            await driver.findElement(By.css('.dropdown-menu.dropdown-menu-left > button')).click();\n            await driver.findElement(By.css('.box-action > button.btn-danger')).click();\n\n            await driver.wait(until.elementsLocated(By.id('home')));\n            \n            const pageUrl = await driver.getCurrentUrl();\n\n            expect(pageUrl).to.eq(BASE_URL);",
              "err": {
                "message": "NoSuchWindowError: Browsing context has been discarded",
                "estack": "NoSuchWindowError: Browsing context has been discarded\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async Driver.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async Driver.findElements (node_modules\\selenium-webdriver\\lib\\webdriver.js:1089:17)",
                "diff": null
              },
              "uuid": "29c7b30e-243c-4220-a35e-7be1dde0095d",
              "parentUUID": "18a9185f-0eee-4773-bfbd-14ccacfa7f92",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "eefb825e-7ba0-46f7-9133-55451dfe536f",
            "29c7b30e-243c-4220-a35e-7be1dde0095d"
          ],
          "pending": [],
          "skipped": [],
          "duration": 132002,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "reportFilename": "test-results",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}