{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-06T08:14:03.224Z",
    "end": "2023-06-06T08:14:33.147Z",
    "duration": 29923,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "3990701a-4047-45f0-b68f-c8a1d0ce7ba3",
      "title": "",
      "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\examples\\login.js",
      "file": "\\test\\examples\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "521b46b0-a4e5-4ded-96dc-05516db783c1",
          "title": "Login",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\examples\\login.js",
          "file": "\\test\\examples\\login.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 3332,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let html = await driver.findElement(By.css(\"html\"));\nlet encodedString = await html.takeScreenshot(true);\nfs.writeFileSync(path.resolve(`./assets/screenshoot/test/login/${(this.test?.parent.tests.findIndex(test => test.title === this.currentTest.title)) + 1}.png`), encodedString, 'base64');\nawait driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "5dfa1333-f569-4103-bb27-73a484602b9a",
              "parentUUID": "521b46b0-a4e5-4ded-96dc-05516db783c1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login to dashboard from browser chrome",
              "fullTitle": "Login Login to dashboard from browser chrome",
              "timedOut": false,
              "duration": 26585,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try {\n\n// Go to application\ndriver = await goToApp(browser, appHost);\n// login to the application\nawait enterDashboard(driver, user);\nlet textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n// Jalankan skrip JavaScript untuk mengumpulkan data jaringan\nconst networkData = await driver.executeScript(`\n    const performanceEntries = performance.getEntriesByType('resource');\n    const requests = performanceEntries.map(entry => {\n        return {\n            entry,\n            url: entry.name,\n            method: entry.initiatorType,\n            type: entry.entryType,\n        };\n    });\n    \n    return requests;\n`);\n// Tampilkan data jaringan\nlet correctUrl = await networkData.find(data => data.url.includes(\"v1/user/me\"));\nlet userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\nuserData = await JSON.parse(userData);\nassert.strictEqual(textStatus > 1, textStatus > 1); \nexpect(correctUrl.url).to.includes(\"v1/user/me\");\nexpect(userData.id).to.greaterThan(0);\n            } catch (error) {\nexpect.fail(error);\n            }",
              "err": {},
              "uuid": "ad2a07ec-3971-449e-a133-f09e98de0877",
              "parentUUID": "521b46b0-a4e5-4ded-96dc-05516db783c1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ad2a07ec-3971-449e-a133-f09e98de0877"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 26585,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "reportFilename": "test-results",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}