{
  "stats": {
    "suites": 6,
    "tests": 12,
    "passes": 11,
    "pending": 0,
    "failures": 1,
    "start": "2023-05-24T15:02:00.662Z",
    "end": "2023-05-24T15:04:57.705Z",
    "duration": 177043,
    "testsRegistered": 12,
    "passPercent": 91.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "bdd64cbc-9902-4e73-b22c-f27af9cb6dd5",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5d16879a-861d-4c21-95d0-9b976163bb19",
          "title": "Classroom Details",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\Classroom\\detail.js",
          "file": "\\test\\Dashboard\\Classroom\\detail.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Classroom Details\"",
              "fullTitle": "Classroom Details \"after each\" hook in \"Classroom Details\"",
              "timedOut": false,
              "duration": 3554,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "94f1a45e-9ade-4075-b123-e187685abc58",
              "parentUUID": "5d16879a-861d-4c21-95d0-9b976163bb19",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for class card chrome",
              "fullTitle": "Classroom Details Check for class card chrome",
              "timedOut": false,
              "duration": 13713,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.manage().window().maximize();\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementsLocated(By.css(`div.card-class`)));\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "a17e3be1-d75e-4639-bb29-8e579eade838",
              "parentUUID": "5d16879a-861d-4c21-95d0-9b976163bb19",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for class card firefox",
              "fullTitle": "Classroom Details Check for class card firefox",
              "timedOut": false,
              "duration": 15612,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.manage().window().maximize();\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementsLocated(By.css(`div.card-class`)));\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "8bbc5df9-c7e3-4afe-8119-2ae04177a1e2",
              "parentUUID": "5d16879a-861d-4c21-95d0-9b976163bb19",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a17e3be1-d75e-4639-bb29-8e579eade838",
            "8bbc5df9-c7e3-4afe-8119-2ae04177a1e2"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 29325,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "2757ef64-7a56-4355-9c03-14d90df8f793",
          "title": "Classroom",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\Classroom\\index.js",
          "file": "\\test\\Dashboard\\Classroom\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Classroom\"",
              "fullTitle": "Classroom \"after each\" hook in \"Classroom\"",
              "timedOut": false,
              "duration": 3677,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "8cf255d0-b660-4162-86b0-cba272ad2e85",
              "parentUUID": "2757ef64-7a56-4355-9c03-14d90df8f793",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for class card chrome",
              "fullTitle": "Classroom Check for class card chrome",
              "timedOut": false,
              "duration": 11765,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.manage().window().maximize();\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementsLocated(By.css(`div.card-class`)));\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {
                "message": "StaleElementReferenceError: stale element reference: stale element not found\n  (Session info: chrome=113.0.5672.93)",
                "estack": "StaleElementReferenceError: stale element reference: stale element not found\n  (Session info: chrome=113.0.5672.93)\n    at Object.throwDecodedError (node_modules\\selenium-webdriver\\lib\\error.js:524:15)\n    at parseHttpResponse (node_modules\\selenium-webdriver\\lib\\http.js:601:13)\n    at Executor.execute (node_modules\\selenium-webdriver\\lib\\http.js:529:28)\n    at processTicksAndRejections (node:internal/process/task_queues:96:5)\n    at async thenableWebDriverProxy.execute (node_modules\\selenium-webdriver\\lib\\webdriver.js:745:17)\n    at async Context.<anonymous> (file:///D:/allbasic/nodejs/selenium/testingapp/test/Dashboard/Classroom/index.js:52:29)",
                "diff": null
              },
              "uuid": "1f299032-5e4b-4f31-9411-4d6a6e902c3e",
              "parentUUID": "2757ef64-7a56-4355-9c03-14d90df8f793",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for class card firefox",
              "fullTitle": "Classroom Check for class card firefox",
              "timedOut": false,
              "duration": 11749,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.manage().window().maximize();\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            await driver.findElement(By.css('i.ri-icon.ri-stack-fill')).click()\n\n            await driver.wait(until.elementsLocated(By.css(`div.card-class`)));\n\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n\n            // Tampilkan data jaringan\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);\n            expect(classCard).to.equal(true);",
              "err": {},
              "uuid": "ff81c0e4-600f-4d78-bbbf-b0d2582e7ac4",
              "parentUUID": "2757ef64-7a56-4355-9c03-14d90df8f793",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ff81c0e4-600f-4d78-bbbf-b0d2582e7ac4"
          ],
          "failures": [
            "1f299032-5e4b-4f31-9411-4d6a6e902c3e"
          ],
          "pending": [],
          "skipped": [],
          "duration": 23514,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "082c7e67-110e-4bf3-a47d-52b0c81e076c",
          "title": "Dashboard",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\Dashboard\\index.js",
          "file": "\\test\\Dashboard\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Dashboard\"",
              "fullTitle": "Dashboard \"after each\" hook in \"Dashboard\"",
              "timedOut": false,
              "duration": 3674,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "6e61d0e6-86f6-4125-9cf7-d659d1574857",
              "parentUUID": "082c7e67-110e-4bf3-a47d-52b0c81e076c",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for analytic charts chrome",
              "fullTitle": "Dashboard Check for analytic charts chrome",
              "timedOut": false,
              "duration": 11380,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "a303ff1c-615b-4fcb-a731-38e575b667d7",
              "parentUUID": "082c7e67-110e-4bf3-a47d-52b0c81e076c",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check for analytic charts firefox",
              "fullTitle": "Dashboard Check for analytic charts firefox",
              "timedOut": false,
              "duration": 12039,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            let doughnutChart = await driver.findElement(By.id('doughnut-chart')).isDisplayed();\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(doughnutChart).to.equal(true);",
              "err": {},
              "uuid": "2b06436b-24ee-4625-8c40-b2e827315f26",
              "parentUUID": "082c7e67-110e-4bf3-a47d-52b0c81e076c",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a303ff1c-615b-4fcb-a731-38e575b667d7",
            "2b06436b-24ee-4625-8c40-b2e827315f26"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23419,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "d8982960-3657-45cd-9eb3-d4ff144ee5e0",
          "title": "Landing Page",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\landing.js",
          "file": "\\test\\landing.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Landing Page\"",
              "fullTitle": "Landing Page \"after each\" hook in \"Landing Page\"",
              "timedOut": false,
              "duration": 3554,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "3bbaba25-e3de-46c3-bbfa-628c8cb7d690",
              "parentUUID": "d8982960-3657-45cd-9eb3-d4ff144ee5e0",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check home of landing page from browser chrome",
              "fullTitle": "Landing Page Check home of landing page from browser chrome",
              "timedOut": false,
              "duration": 4188,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n    .forBrowser(browser)\n    .build();\nawait driver.manage().window().maximize();\nawait driver.get(appHost);\n\nawait driver.wait(until.elementsLocated(By.id('home')));\nconst home = await driver.findElement(By.css('#home')).isDisplayed();\nexpect(home).to.eq(true);",
              "err": {},
              "uuid": "b029bc56-08a2-4bae-a9e1-2dfdc501f765",
              "parentUUID": "d8982960-3657-45cd-9eb3-d4ff144ee5e0",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check home of landing page from browser firefox",
              "fullTitle": "Landing Page Check home of landing page from browser firefox",
              "timedOut": false,
              "duration": 4402,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n    .forBrowser(browser)\n    .build();\nawait driver.manage().window().maximize();\nawait driver.get(appHost);\n\nawait driver.wait(until.elementsLocated(By.id('home')));\nconst home = await driver.findElement(By.css('#home')).isDisplayed();\nexpect(home).to.eq(true);",
              "err": {},
              "uuid": "033c6e4d-c112-4931-8a71-cab44564d712",
              "parentUUID": "d8982960-3657-45cd-9eb3-d4ff144ee5e0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "b029bc56-08a2-4bae-a9e1-2dfdc501f765",
            "033c6e4d-c112-4931-8a71-cab44564d712"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 8590,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "c93115f6-f9d5-4267-85cd-c60ebb30cfa3",
          "title": "Login",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\login.js",
          "file": "\\test\\login.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 3662,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "a232f2fe-b455-4b8a-aa19-860e41dcd77d",
              "parentUUID": "c93115f6-f9d5-4267-85cd-c60ebb30cfa3",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Login to dashboard from browser chrome",
              "fullTitle": "Login Login to dashboard from browser chrome",
              "timedOut": false,
              "duration": 11467,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "fef13d7f-a865-4717-94be-a6ad3ca22351",
              "parentUUID": "c93115f6-f9d5-4267-85cd-c60ebb30cfa3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Login to dashboard from browser firefox",
              "fullTitle": "Login Login to dashboard from browser firefox",
              "timedOut": false,
              "duration": 12201,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            // Jalankan skrip JavaScript untuk mengumpulkan data jaringan\n            const networkData = await driver.executeScript(`\nconst performanceEntries = performance.getEntriesByType('resource');\nconst requests = performanceEntries.map(entry => {\n    return {\n        entry,\n        url: entry.name,\n        method: entry.initiatorType,\n        type: entry.entryType,\n    };\n});\n\nreturn requests;\n            `);\n\n            // Tampilkan data jaringan\n            let correctUrl = networkData.find(data => data.url.includes(\"v1/user/me\"));\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(correctUrl.url).to.includes(\"v1/user/me\");\n            expect(userData.id).to.greaterThan(0);",
              "err": {},
              "uuid": "b7e37785-4ff5-452f-98bd-6ffda29cfd9b",
              "parentUUID": "c93115f6-f9d5-4267-85cd-c60ebb30cfa3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "fef13d7f-a865-4717-94be-a6ad3ca22351",
            "b7e37785-4ff5-452f-98bd-6ffda29cfd9b"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 23668,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        },
        {
          "uuid": "6c3268a0-7dce-45a1-863f-45d8a412b7b1",
          "title": "Login",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\logout.js",
          "file": "\\test\\logout.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 3569,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "68773708-de68-4218-a35b-0e0ff318aecb",
              "parentUUID": "6c3268a0-7dce-45a1-863f-45d8a412b7b1",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Logout from browser chrome",
              "fullTitle": "Login Logout from browser chrome",
              "timedOut": false,
              "duration": 13714,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.manage().window().maximize();\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n            \n            await driver.findElement(By.css('.dropdown.navbar-profile')).click();\n            await driver.findElement(By.css('.dropdown-menu.dropdown-menu-left > button')).click();\n            await driver.findElement(By.css('.box-action > button.btn-danger')).click();\n\n            await driver.wait(until.elementsLocated(By.id('home')));\n            \n            const pageUrl = await driver.getCurrentUrl();\n\n            expect(pageUrl).to.eq(BASE_URL);",
              "err": {},
              "uuid": "37da26c9-6d7d-4bd2-b451-29f1836d77c6",
              "parentUUID": "6c3268a0-7dce-45a1-863f-45d8a412b7b1",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Logout from browser firefox",
              "fullTitle": "Login Logout from browser firefox",
              "timedOut": false,
              "duration": 14852,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.manage().window().maximize();\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[1]/div/input`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.xpath(`/html/body/div/div/div/div/div/div/div/div/div/div[2]/form/div[2]/div/input`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n            \n            await driver.findElement(By.css('.dropdown.navbar-profile')).click();\n            await driver.findElement(By.css('.dropdown-menu.dropdown-menu-left > button')).click();\n            await driver.findElement(By.css('.box-action > button.btn-danger')).click();\n\n            await driver.wait(until.elementsLocated(By.id('home')));\n            \n            const pageUrl = await driver.getCurrentUrl();\n\n            expect(pageUrl).to.eq(BASE_URL);",
              "err": {},
              "uuid": "5b093124-aea4-4ad6-ab43-78182ab7ac1c",
              "parentUUID": "6c3268a0-7dce-45a1-863f-45d8a412b7b1",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "37da26c9-6d7d-4bd2-b451-29f1836d77c6",
            "5b093124-aea4-4ad6-ab43-78182ab7ac1c"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 28566,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "D:/allbasic/nodejs/selenium/testingapp/testReports",
        "reportFilename": "test-results",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}