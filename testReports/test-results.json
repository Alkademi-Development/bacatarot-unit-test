{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 2,
    "pending": 0,
    "failures": 0,
    "start": "2023-05-25T11:24:27.245Z",
    "end": "2023-05-25T11:25:14.527Z",
    "duration": 47282,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "f5b236b3-2442-420b-bbd7-ac65b3471761",
      "title": "",
      "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\dashboard\\user\\create.js",
      "file": "\\test\\dashboard\\user\\create.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "d74147b9-17e8-428d-b5a0-56adc503b221",
          "title": "User",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\dashboard\\user\\create.js",
          "file": "\\test\\dashboard\\user\\create.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"User\"",
              "fullTitle": "User \"after each\" hook in \"User\"",
              "timedOut": false,
              "duration": 3689,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "4a930e02-6a58-4050-a49a-44c23464423f",
              "parentUUID": "d74147b9-17e8-428d-b5a0-56adc503b221",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Create user in dashboard from browser chrome",
              "fullTitle": "User Create user in dashboard from browser chrome",
              "timedOut": false,
              "duration": 17943,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.manage().window().maximize();\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.css(`.input-group.input-group-merge >input[type=\"email\"]`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.css(`.input-group.input-group-merge >input[type=\"password\"]`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            // Selections & Actions\n            await driver.findElement(By.css('a > i.ri-icon.ri-user-3-line')).click();\n            await driver.findElement(By.css('button.btn.btn-primary')).click();\n            \n            await driver.wait(until.elementsLocated(By.css(`div.card-wrapper`)));\n            let cardForm = await driver.findElement(By.css('.card-wrapper')).isDisplayed();\n            let cardFormTitle = await driver.findElement(By.css(\".card-wrapper .card .card-header h3\")).getText();\n\n            // Fill the Form\n            await driver.wait(until.elementsLocated(By.css(`div.program-card`)));\n            let selectUserRole = await driver.findElement(By.css(\".program-card\"));\n            await selectUserRole.click();\n            \n            // Get the results\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            // Result Output\n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(cardForm).to.eq(true);\n            expect(cardFormTitle).to.eq(\"Create Users\");\n\n            expect(await selectUserRole.getAttribute('class')).contain('bg-primary');",
              "err": {},
              "uuid": "480c3169-b5be-4d8e-a61a-6203db563159",
              "parentUUID": "d74147b9-17e8-428d-b5a0-56adc503b221",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create user in dashboard from browser firefox",
              "fullTitle": "User Create user in dashboard from browser firefox",
              "timedOut": false,
              "duration": 22586,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "driver = new Builder()\n.forBrowser(browser)\n.build();\n\n            await driver.manage().window().maximize();\n            await driver.get(appHost);\n\n            // login to the application\n            await driver.findElement(By.css(`.input-group.input-group-merge >input[type=\"email\"]`)).sendKeys(user.email, Key.RETURN);\n            await driver.findElement(By.css(`.input-group.input-group-merge >input[type=\"password\"]`)).sendKeys(user.password, Key.RETURN);\n            await driver.wait(until.elementsLocated(By.css(`h1.text-welcome`)));\n\n            // Selections & Actions\n            await driver.findElement(By.css('a > i.ri-icon.ri-user-3-line')).click();\n            await driver.findElement(By.css('button.btn.btn-primary')).click();\n            \n            await driver.wait(until.elementsLocated(By.css(`div.card-wrapper`)));\n            let cardForm = await driver.findElement(By.css('.card-wrapper')).isDisplayed();\n            let cardFormTitle = await driver.findElement(By.css(\".card-wrapper .card .card-header h3\")).getText();\n\n            // Fill the Form\n            await driver.wait(until.elementsLocated(By.css(`div.program-card`)));\n            let selectUserRole = await driver.findElement(By.css(\".program-card\"));\n            await selectUserRole.click();\n            \n            // Get the results\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n\n            let userData = await driver.executeScript(\"return window.localStorage.getItem('user')\")\n            userData = JSON.parse(userData);\n            \n            // Result Output\n            assert.strictEqual(textStatus > 1, textStatus > 1); \n            expect(userData.id).to.greaterThan(0);\n            expect(cardForm).to.eq(true);\n            expect(cardFormTitle).to.eq(\"Create Users\");\n\n            expect(await selectUserRole.getAttribute('class')).contain('bg-primary');",
              "err": {},
              "uuid": "f21c9025-babb-4238-bcfe-ea2be915cb91",
              "parentUUID": "d74147b9-17e8-428d-b5a0-56adc503b221",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "480c3169-b5be-4d8e-a61a-6203db563159",
            "f21c9025-babb-4238-bcfe-ea2be915cb91"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 40529,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "test-results",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "reportFilename": "test-results",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}