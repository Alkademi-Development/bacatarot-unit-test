{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 1,
    "failures": 0,
    "start": "2023-05-31T07:01:46.222Z",
    "end": "2023-05-31T07:02:46.664Z",
    "duration": 60442,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 50,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "4a7f4a8d-5297-4bd3-a1b3-9d34af4a34df",
      "title": "",
      "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\dashboard\\classroom\\index.js",
      "file": "\\test\\dashboard\\classroom\\index.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "a577fd7c-fe67-4258-8e60-d35a096c02d6",
          "title": "Classroom",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\dashboard\\classroom\\index.js",
          "file": "\\test\\dashboard\\classroom\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Classroom\"",
              "fullTitle": "Classroom \"after each\" hook in \"Classroom\"",
              "timedOut": false,
              "duration": 3233,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "31e2e5ae-cf0d-4e0f-b987-c24e48a8df37",
              "parentUUID": "a577fd7c-fe67-4258-8e60-d35a096c02d6",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for class card from chrome",
              "fullTitle": "Classroom Check for class card from chrome",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "fb72264a-76a1-4481-8f87-2a96f97b669e",
              "parentUUID": "a577fd7c-fe67-4258-8e60-d35a096c02d6",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check all process in tab all class from chrome",
              "fullTitle": "Classroom Check all process in tab all class from chrome",
              "timedOut": false,
              "duration": 57184,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            await driver.manage().window().maximize();\n            \n            // login to the application\n            await enterDashboard(driver, user);\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click();\n            let cardClass = await driver.findElement(By.css(`div.card-class`));\n            await driver.wait(until.stalenessOf(cardClass));\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n            // await driver.executeScript('window.scrollTo(0, 5000)');\n            // Selection & Actions\n            let tabsTypeClass = await driver.findElements(By.css('div.item-tab'));\n            let tabAll = await tabsTypeClass[1];\n            let badgesProgress = await driver.findElements(By.css('div.box-progress p.badge-progress'));\n            let allTypesBadge = ['badge-program', 'badge-blue', 'badge-green'];\n            let hasAllTypes = await Promise.all(\n                badgesProgress.map(async (badge) => {\n                  let badgeClass = await badge.getAttribute('class');\n                  return allTypesBadge.some(item => badgeClass.includes(item));\n                })\n            ).then((results) => results.every((result) => result));\n            \n            let allTypesFound = badgesProgress.every(async badge => {\n                let badgeClass = await badge.getAttribute('class');\n                return allTypesBadge.some(item => badgeClass.includes(item));\n              });\n              \n            if (allTypesFound) {\n            console.log(\"Semua jenis ditemukan\");\n            } else {\n            console.log(\"Belum semua jenis ditemukan\");\n            }\n            \n            // let allTypesFound = false;\n            // while (!allTypesFound) {\n            //   await Promise.all(\n            //     badgesProgress.map(async (badge) => {\n            //       let badgeClass = await badge.getAttribute('class');\n            //       console.log(badgeClass)\n            //       return allTypesBadge.some(item => badgeClass.includes(item));\n            //     })\n            //   ).then((results) => {\n            //     console.log(results);\n            //     if(results.every((result) => result) === true) allTypesFound = true;\n            //   });\n            \n            //   await driver.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n            //   await driver.sleep(1000); // Sesuaikan jeda jika diperlukan\n            // }            \n              \n              \n            // Result the outputs\n            expect(classCard).to.equal(true);\n            expect(hasAllTypes).to.equal(true);",
              "err": {},
              "uuid": "7607f685-29b3-4f4d-9c95-401e5d975a67",
              "parentUUID": "a577fd7c-fe67-4258-8e60-d35a096c02d6",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "7607f685-29b3-4f4d-9c95-401e5d975a67"
          ],
          "failures": [],
          "pending": [
            "fb72264a-76a1-4481-8f87-2a96f97b669e"
          ],
          "skipped": [],
          "duration": 57184,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "dashboard/classroom",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "reportFilename": "dashboard/classroom",
        "reportPageTitle": "DASHBOARD/CLASSROOM"
      },
      "version": "6.2.0"
    }
  }
}