{
  "stats": {
    "suites": 1,
    "tests": 2,
    "passes": 1,
    "pending": 1,
    "failures": 0,
    "start": "2023-05-31T09:01:02.190Z",
    "end": "2023-05-31T09:01:54.946Z",
    "duration": 52756,
    "testsRegistered": 2,
    "passPercent": 100,
    "pendingPercent": 50,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "18e05d50-73f9-4e8f-a0b5-c15f6184beba",
      "title": "",
      "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\dashboard\\classroom\\index.js",
      "file": "\\test\\dashboard\\classroom\\index.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "506f38e4-b82a-4c13-b7e6-8cb8bf24f2c4",
          "title": "Classroom",
          "fullFile": "D:\\allbasic\\nodejs\\selenium\\testingapp\\test\\dashboard\\classroom\\index.js",
          "file": "\\test\\dashboard\\classroom\\index.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after each\" hook in \"Classroom\"",
              "fullTitle": "Classroom \"after each\" hook in \"Classroom\"",
              "timedOut": false,
              "duration": 3116,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "await driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "1b521386-5396-410d-bd69-0ce75706c438",
              "parentUUID": "506f38e4-b82a-4c13-b7e6-8cb8bf24f2c4",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Check for class card from chrome",
              "fullTitle": "Classroom Check for class card from chrome",
              "timedOut": false,
              "duration": 0,
              "state": "pending",
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": true,
              "context": null,
              "code": "",
              "err": {},
              "uuid": "5febd972-dfbc-4748-8e6b-647235869aec",
              "parentUUID": "506f38e4-b82a-4c13-b7e6-8cb8bf24f2c4",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Check all process in tab all class from chrome",
              "fullTitle": "Classroom Check all process in tab all class from chrome",
              "timedOut": false,
              "duration": 49634,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "// Go to application\n            driver = await goToApp(browser, appHost)\n            await driver.manage().window().maximize();\n            \n            // login to the application\n            await enterDashboard(driver, user);\n            let textStatus = await driver.executeScript(`return document.querySelectorAll('h1.text-welcome').length`);\n            await driver.findElement(By.css('a i.ri-icon.ri-stack-fill')).click();\n            let cardClass = await driver.findElement(By.css(`div.card-class`));\n            await driver.wait(until.stalenessOf(cardClass));\n            let classCard = await driver.findElement(By.css('div.card-class')).isDisplayed();\n            // await driver.executeScript('window.scrollTo(0, 5000)');\n            // Selection & Actions\n            let tabsTypeClass = await driver.findElements(By.css('div.item-tab'));\n            let tabAll = await tabsTypeClass[1];\n            let badgesProgress = await driver.findElements(By.css('div.box-progress p.badge-progress'));\n            let badgeClasses = await Promise.all(\n                badgesProgress.map(async (badge) => {\n                  let badgeClass = await badge.getAttribute('class');\n                  badgeClass = badgeClass.replace(\"badge-progress \", \"\");\n                  return badgeClass;\n                })\n            );\n            let allTypesBadge = ['badge-program', 'badge-blue', 'badge-green'];\n            let hasAllTypes = allTypesBadge.every(type => badgeClasses.includes(type));\n            \n            let allTypesFound = false;\n            while (!allTypesFound) {\n            \n              if(hasAllTypes == true) {\n                allTypesFound = true;\n              }\n            \n              await driver.executeScript('window.scrollTo(0, document.body.scrollHeight)');\n              await driver.sleep(1000); // Sesuaikan jeda jika diperlukan\n            }            \n              \n              \n            // Result the outputs\n            expect(classCard).to.equal(true);\n            expect(hasAllTypes).to.equal(true);",
              "err": {},
              "uuid": "ecf1cfd2-d1a5-4941-b9f6-5fffdcd3dd92",
              "parentUUID": "506f38e4-b82a-4c13-b7e6-8cb8bf24f2c4",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "ecf1cfd2-d1a5-4941-b9f6-5fffdcd3dd92"
          ],
          "failures": [],
          "pending": [
            "5febd972-dfbc-4748-8e6b-647235869aec"
          ],
          "skipped": [],
          "duration": 49634,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "d",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "testReports",
        "reportFilename": "d",
        "reportPageTitle": "D"
      },
      "version": "6.2.0"
    }
  }
}