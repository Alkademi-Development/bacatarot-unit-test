{
  "stats": {
    "suites": 1,
    "tests": 1,
    "passes": 1,
    "pending": 0,
    "failures": 0,
    "start": "2023-06-17T07:11:11.832Z",
    "end": "2023-06-17T07:11:21.685Z",
    "duration": 9853,
    "testsRegistered": 1,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "94b6807a-cfbe-406d-8748-def4ba093003",
      "title": "",
      "fullFile": "D:\\allproject\\alkademik\\research-unit-test-bacatarot\\test\\app\\login.js",
      "file": "\\test\\app\\login.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "f95b8ff7-451b-41b4-9fff-7d5c275102ad",
          "title": "Login",
          "fullFile": "D:\\allproject\\alkademik\\research-unit-test-bacatarot\\test\\app\\login.js",
          "file": "\\test\\app\\login.js",
          "beforeHooks": [],
          "afterHooks": [
            {
              "title": "\"after all\" hook in \"Login\"",
              "fullTitle": "Login \"after all\" hook in \"Login\"",
              "timedOut": false,
              "duration": 1,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "console.log(`${' '.repeat(4)}Screenshoots test berhasil di buat, berada di folder: ${screenshootFilePath} `);",
              "err": {},
              "uuid": "5cf492f9-0aaf-44cb-9e0d-31cc763dee19",
              "parentUUID": "f95b8ff7-451b-41b4-9fff-7d5c275102ad",
              "isHook": true,
              "skipped": false
            },
            {
              "title": "\"after each\" hook in \"Login\"",
              "fullTitle": "Login \"after each\" hook in \"Login\"",
              "timedOut": false,
              "duration": 3966,
              "state": null,
              "speed": null,
              "pass": false,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "fs.mkdir(screenshootFilePath, { recursive: true }, (error) => {\n    if (error) {\n        console.error(`Terjadi kesalahan dalam membuat folder screenshoot:`, error);\n    }\n});\nlet fileNamePath = path.resolve(`${screenshootFilePath}/${this.currentTest?.state != 'failed' ? (this.test?.parent.tests.findIndex(test => test.title === this.currentTest.title)) + 1 + '-[passed]-' + moment().tz(\"Asia/Jakarta\").format(\"YYYY-MM-DD_HH-mm-ss\") : (this.test?.parent.tests.findIndex(test => test.title === this.currentTest.title)) + 1 + '-[failed]-' + moment().tz(\"Asia/Jakarta\").format(\"YYYY-MM-DD_HH-mm-ss\") }.png`);\nawait takeScreenshot(driver, fileNamePath);\nif(this.currentTest.isPassed) {\n    addContext(this, {\n        title: 'Expected Results',\n        value: \"- \" + customMessages.map(msg => msg.trim()).join(\"\\n- \")\n    })\n} else {\n    addContext(this, {\n        title: 'Expected Results',\n        value: \"- \" + customMessages.map(msg => msg.trim()).join(\"\\n- \")\n    })\n}\naddContext(this, {\n    title: 'Screenshoot-Test-Results',\n    value: \"..\\\\\" + path.relative(fileURLToPath(import.meta.url), fileNamePath)\n});\nawait driver.sleep(3000);\nawait driver.quit();",
              "err": {},
              "uuid": "1a7ddb58-c2dd-4e51-a85c-0e83bbff016d",
              "parentUUID": "f95b8ff7-451b-41b4-9fff-7d5c275102ad",
              "isHook": true,
              "skipped": false
            }
          ],
          "tests": [
            {
              "title": "Test Other - from browser firefox",
              "fullTitle": "Login Test Other - from browser firefox",
              "timedOut": false,
              "duration": 5881,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": "[\n  {\n    \"title\": \"Expected Results\",\n    \"value\": \"- Successfully get the data from local storage ✅\"\n  },\n  {\n    \"title\": \"Screenshoot-Test-Results\",\n    \"value\": \"..\\\\..\\\\..\\\\..\\\\testResults\\\\screenshoots\\\\app\\\\login\\\\1-[passed]-2023-06-17_14-11-17.png\"\n  }\n]",
              "code": "try {\n                            // Aksi masuk ke dalam halaman browser\n                            driver = await goToApp(browser, appHost);\n                            await driver.manage().window().maximize();\n                            // Aksi menunggu mengisi form login untuk melakukan authentication\n                            await loginToApp(driver, user, browser, appHost);\n                            // Results\n                            let userData = await driver.executeScript(\"return window.localStorage.getItem('user_data')\");\n                            userData = await JSON.parse(userData);\n                            // Expect results and add custom message for addtional description\n                            customMessages = [\n                                userData?.id > 0 ? \"Successfully get the data from local storage ✅\" : \"No data available from local storage ❌\",\n                            ]\n                            expect(parseInt(userData.id)).to.greaterThan(0);\n                        } catch (error) {\n                            expect.fail(error);\n                        }",
              "err": {},
              "uuid": "0f3c9e55-d7be-4d7c-9e6c-a005f7e70074",
              "parentUUID": "f95b8ff7-451b-41b4-9fff-7d5c275102ad",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0f3c9e55-d7be-4d7c-9e6c-a005f7e70074"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 5881,
          "root": false,
          "rootEmpty": false,
          "_timeout": 0
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 0
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "app/login/[status]-[datetime]-report",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "cdn": "true",
        "timestamp": "longDate",
        "overwrite": "false",
        "reportDir": "testResults/reports",
        "reportFilename": "app/login/[status]-[datetime]-report",
        "reportPageTitle": "Laporan-Harian-Testing"
      },
      "version": "6.2.0"
    }
  }
}